name: Multiline
# Validate schemas modified in an pull request or push against their given meta-schema (such as draft-07, etc.)
on:
  workflow_dispatch:
    inputs:
      target-acl-spec:
        type: string
        required: true
        # Default to no write for everyone except tm70_ci
        # TODO: This default will probably not work for other `remote-environment`s
        default: >-
          u::rwx,
          u:tm70_ci:rwx,
          g::r-x,
          m::rwx,
          o::---,
          d:u::rwx,
          d:u:tm70_ci:rwx,
          d:g::r-x,
          d:m::rwx,
          d:o::---
        description: ACL spec to be passed to `setfacl -m` for the given target
jobs:
  multiline:
    runs-on: ubuntu-latest
    if: inputs.target-acl-spec != ''
    container: rockylinux/rockylinux:8.10
    env:
      TEST_DIR: /opt/test
    steps:
      - name: Format ACL
        id: fmt
        run: echo "acl=$(echo '${{ inputs.target-acl-spec }}' | tr -d ' ')" >> $GITHUB_OUTPUT

      - name: Create Users
        run: |
          set +e
          echo "${{ steps.fmt.outputs.acl }}"

          acl="${{ steps.fmt.outputs.acl }}"
          for entry in $acl; do
            if [[ $entry =~ ^u(ser)?:([^:]+): ]]; then
              user="${BASH_REMATCH[2]}"
              echo "Adding user $user"
              useradd $user
            fi
          done

      - name: Create Groups
        run: |
          set +e
          echo "${{ steps.fmt.outputs.acl }}"

          acl="${{ steps.fmt.outputs.acl }}"
          for entry in $acl; do
            if [[ $entry =~ ^g(roup)?:([^:]+): ]]; then
              user="${BASH_REMATCH[2]}"
              echo "Adding group $group"
              groupadd $group
            fi
          done

      - name: Verify Valid ACL Spec
        run: |
          mkdir ${{ env.TEST_DIR }}
          cut -d: -f1 /etc/passwd
          groups
          setfacl --test --recursive --modify "${{ inputs.target-acl-spec }}" ${{ env.TEST_DIR }}
